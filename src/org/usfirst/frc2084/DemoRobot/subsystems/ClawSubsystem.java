/* 
 * Copyright (c) 2015 RobotsByTheC. All rights reserved.
 *
 * Open Source Software - may be modified and shared by FRC teams. The code must
 * be accompanied by the BSD license file in the root directory of the project.
 */
package org.usfirst.frc2084.DemoRobot.subsystems;

import org.usfirst.frc2084.DemoRobot.RobotMap;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;

/**
 *
 */
public class ClawSubsystem extends Subsystem {

    public static final double LIFT_POSITION = 1;
    public static final double LOWER_POSITION = 0;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    Servo liftServo = RobotMap.clawSubsystemLiftServo;
    Servo clawServo = RobotMap.clawSubsystemClawServo;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public ClawSubsystem() {
        setClawState(ClawState.OPEN);
        setLiftState(LiftState.LIFTED);
    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }

    public static class ClawState {

        public static final ClawState OPEN = new ClawState(0.9);
        public static final ClawState CLOSED = new ClawState(0.57);
        private final double position;

        public ClawState(double position) {
            this.position = position;
        }
    }
    private ClawState clawState = ClawState.OPEN;

    public void setClawState(ClawState clawState) {
        this.clawState = clawState;
        clawServo.set(clawState.position);
    }

    public ClawState getClawState() {
        return clawState;
    }

    public static class LiftState {

        public static final LiftState LIFTED = new LiftState(1);
        public static final LiftState LOWERED = new LiftState(0.45);
        private final double position;

        public LiftState(double position) {
            this.position = position;
        }
    }
    private LiftState liftState = LiftState.LIFTED;

    public void setLiftState(LiftState liftState) {
        this.liftState = liftState;
        liftServo.set(liftState.position);
    }

    public LiftState getLiftState() {
        return liftState;
    }
}
